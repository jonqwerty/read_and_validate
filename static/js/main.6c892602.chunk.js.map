{"version":3,"sources":["table/Table.jsx","table/ErrorRequiredFields.jsx","table/ErrorType.jsx","data/lawyerList.csv","App.jsx","reportWebVitals.js","index.js"],"names":["theadStyle","border","backgroundColor","padding","tbodyStyle","errorStyle","states","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","Table","props","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","today2","dd2","mm2","yyyy2","style","borderCollapse","margin","marginTop","rows","map","item","index","FullName","trim","Phone","length","Email","Number","isInteger","Age","Experience","YearlyIncome","toFixed","Haschildren","toLowerCase","Licensestates","indexOf","Expirationdate","match","Licensenumber","duplicatePhone","duplicateEmail","ErrorRequiredFields","width","height","textAlign","ErrorType","App","useState","setRows","type","setType","a","fetch","file","response","url","split","pop","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","value","results","Papa","parse","header","rows_","data","slice","useEffect","getType","emptyCell","row","push","emails","phones","i","j","undefined","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c892602.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst theadStyle = {\r\n  border: '1px solid black',\r\n  backgroundColor: 'aqua',\r\n  padding: '5px'\r\n}\r\n\r\nconst tbodyStyle = {\r\n  border: '1px solid black',\r\n}\r\n\r\nconst errorStyle = {\r\n  border: '1px solid black',\r\n  backgroundColor: 'pink',\r\n}\r\n\r\nconst states = {\r\n  Alabama: 'AL',\r\n  Alaska: 'AK',\r\n  Arizona: 'AZ',\r\n  Arkansas: 'AR',\r\n  California: 'CA',\r\n  Colorado: 'CO',\r\n  Connecticut: 'CT',\r\n  Delaware: 'DE',\r\n  Florida: 'FL',\r\n  Georgia: 'GA',\r\n  Hawaii: 'HI',\r\n  Idaho: 'ID',\r\n  Illinois: 'IL',\r\n  Indiana: 'IN',\r\n  Iowa: 'IA',\r\n  Kansas: 'KS',\r\n  Kentucky: 'KY',\r\n  Louisiana: 'LA',\r\n  Maine: 'ME',\r\n  Maryland: 'MD',\r\n  Massachusetts: 'MA',\r\n  Michigan: 'MI',\r\n  Minnesota: 'MN',\r\n  Mississippi: 'MS',\r\n  Missouri: 'MO',\r\n  Montana: 'MT',\r\n  Nebraska: 'NE',\r\n  Nevada: 'NV',\r\n  'New Hampshire': 'NH',\r\n  'New Jersey': 'NJ',\r\n  'New Mexico': 'NM',\r\n  'New York': 'NY',\r\n  'North Carolina': 'NC',\r\n  'North Dakota': 'ND',\r\n  Ohio: 'OH',\r\n  Oklahoma: 'OK',\r\n  Oregon: 'OR',\r\n  Pennsylvania: 'PA',\r\n  'Rhode Island': 'RI',\r\n  'South Carolina': 'SC',\r\n  'South Dakota': 'SD',\r\n  Tennessee: 'TN',\r\n  Texas: 'TX',\r\n  Utah: 'UT',\r\n  Vermont: 'VT',\r\n  Virginia: 'VA',\r\n  Washington: 'WA',\r\n  'West Virginia': 'WV',\r\n  Wisconsin: 'WI',\r\n  Wyoming: 'WY',\r\n \r\n}\r\n\r\n\r\nconst Table = (props) => {\r\n\r\n\r\n  \r\n\r\n  // get curent date in format yyyy-mm-dd\r\n  let today = new Date()\r\n  let dd = String(today.getDate()).padStart(2, '0')\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0')\r\n  let yyyy = today.getFullYear()\r\n\r\n  today = yyyy + '-' + mm + '-' + dd\r\n  console.log(today)\r\n\r\n  // get curent date in format mm/dd/yyyy\r\n  let today2 = new Date()\r\n  let dd2 = String(today2.getDate()).padStart(2, '0')\r\n  let mm2 = String(today2.getMonth() + 1).padStart(2, '0')\r\n  let yyyy2 = today2.getFullYear()\r\n\r\n  today2 = mm2 + '/' + dd2 + '/' + yyyy2\r\n  console.log(today2)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <table style={{ border: '1px solid black', borderCollapse: 'collapse', margin: 'auto', marginTop: '50px' }} >\r\n        <thead>\r\n          <tr >\r\n            <th style={theadStyle}>ID</th>\r\n            <th style={theadStyle}>Full Name</th>\r\n            <th style={theadStyle}>Phone</th>\r\n            <th style={theadStyle}>Email</th>\r\n            <th style={theadStyle}>Age</th>\r\n            <th style={theadStyle}> Experience</th>\r\n            <th style={theadStyle}> Yearly Income</th>\r\n            <th style={theadStyle}>Has children</th>\r\n            <th style={theadStyle}>License state</th>\r\n            <th style={theadStyle}>Expiration date</th>\r\n            <th style={theadStyle}>License number</th>\r\n            <th style={theadStyle}>Duplicate with</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {props.rows.map((item, index) => (\r\n            <tr key={index}>\r\n              <td style={tbodyStyle}>{index + 1}</td>\r\n              <td style={tbodyStyle}>{item.FullName.trim()}</td>\r\n\r\n              { item.Phone.length === 10\r\n                ? <td style={tbodyStyle}>{'+1' + item.Phone.trim()}</td>\r\n                : item.Phone.length === 11\r\n                  ? <td style={tbodyStyle}>{'+' + item.Phone.trim()}</td>\r\n                  : <td style={tbodyStyle}>{item.Phone.trim()}</td>}\r\n\r\n              <td style={tbodyStyle}>{item.Email.trim()}</td>\r\n\r\n              { Number.isInteger(+item.Age) && +item.Age > 0 && +item.Age >= 21\r\n                ? <td style={tbodyStyle}>{item.Age.trim()}</td>\r\n                : <td style={errorStyle}>{item.Age.trim()}</td>}\r\n\r\n              {+item.Experience >= 0 && +item.Experience < +item.Age\r\n                ? <td style={tbodyStyle}>{item.Experience.trim()}</td>\r\n                : <td style={errorStyle}>{item.Experience.trim()}</td>}\r\n\r\n              {+item.YearlyIncome < 1000000\r\n                ? <td style={tbodyStyle}>{(+item.YearlyIncome.trim()).toFixed(2)}</td>\r\n                : <td style={errorStyle}>{(+(item.YearlyIncome.trim())).toFixed(2)}</td>}\r\n\r\n              {item.Haschildren.toLowerCase() === 'true' || item.Haschildren.toLowerCase() === 'false' || item.Haschildren.toLowerCase() === ''\r\n                ? <td style={tbodyStyle}>{item.Haschildren.trim()}</td>\r\n                : <td style={errorStyle}>{item.Haschildren.trim()}</td>}\r\n\r\n              {item.Licensestates.trim().length === 2\r\n              ? <td style={tbodyStyle}>{item.Licensestates.trim()}</td>\r\n              : item.Licensestates.trim().length > 2 && item.Licensestates.trim().indexOf('|') === -1\r\n              ? <td style={tbodyStyle}>{ states[item.Licensestates.trim()] }</td>\r\n              : item.Licensestates.trim().length > 2 && item.Licensestates.trim().indexOf('|') !== -1\r\n              ? <td style={tbodyStyle}>{ item.Licensestates.trim() }</td>\r\n              : <td style={errorStyle}>{item.Licensestates.trim()}</td>}\r\n\r\n\r\n              {item.Expirationdate.match(/\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])/) && new Date(item.Expirationdate) < new Date(today)\r\n                ? <td style={tbodyStyle}>{item.Expirationdate.trim()}</td>\r\n                : item.Expirationdate.match(/(0[1-9]|1[0-9]|2[0-9]|3[0,1])([/+-])(0[1-9]|1[0-2])([/+-])(19|20)[0-9]{2}/) && new Date(item.Expirationdate) < new Date(today2)\r\n                  ? <td style={tbodyStyle}>{item.Expirationdate.trim()}</td>\r\n                  : <td style={errorStyle}>{item.Expirationdate.trim()}</td>}\r\n\r\n              {item.Licensenumber.length === 6 && item.Licensenumber.match(\"^[a-zA-Z0-9]+$\")\r\n                ? <td style={tbodyStyle}>{item.Licensenumber.trim()}</td>\r\n                : <td style={errorStyle}>{item.Licensenumber.trim()}</td>}\r\n\r\n              {props.duplicatePhone[index] === null && props.duplicateEmail[index] === null\r\n                ? <td style={tbodyStyle}></td>\r\n                : props.duplicatePhone[index] === null && props.duplicateEmail[index] !== null\r\n                  ? <td style={tbodyStyle}>{props.duplicateEmail[index] + 1}</td>\r\n                  : props.duplicatePhone[index] !== null && props.duplicateEmail[index] === null\r\n                    ? <td style={tbodyStyle}>{props.duplicatePhone[index] + 1}</td>\r\n                    : props.duplicatePhone[index] < props.duplicateEmail[index]\r\n                      ? <td style={tbodyStyle}>{props.duplicatePhone[index] + 1}</td>\r\n                      : <td style={tbodyStyle}>{props.duplicateEmail[index] + 1}</td>}\r\n\r\n\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\n\r\n\r\nconst ErrorRequiredFields = () => {\r\n\r\n    return (\r\n\r\n        <div style={{border: '1px solid pinc', backgroundColor: 'pink', width: '400px', height: '60px', textAlign: 'center', margin: 'auto' }}>\r\n            Full Name, Phone, Email is required for filling\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorRequiredFields","import React from 'react'\r\n\r\n\r\nconst ErrorType = () => {\r\n\r\n    return (\r\n\r\n        <div style={{border: '1px solid pinc', backgroundColor: 'pink', width: '400px', height: '60px', textAlign: 'center', margin: 'auto' }}>\r\n            File format is not corrected\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorType","export default __webpack_public_path__ + \"static/media/lawyerList.fdcc8bae.csv\";","import React, { useEffect, useState } from 'react'\nimport Papa from 'papaparse'\nimport Table from './table/Table'\nimport ErrorRequiredFields from './table/ErrorRequiredFields'\nimport ErrorType from './table/ErrorType'\nimport file from './data/lawyerList.csv'\n\n\nconst App = () => {\n\n  const [rows, setRows] = useState([])\n  const [type, setType] = useState(null)\n\n\n  async function getType() {\n    const response = await fetch(file)\n    \n    console.log(response)\n    const type = response.url.split('.').pop()\n\n    setType(type)\n  }\n\n  async function getRows() {\n    \n    const response = await fetch(file)\n    const reader = response.body.getReader()\n    const result = await reader.read() // raw array\n    const decoder = new TextDecoder('utf-8')\n    const csv = decoder.decode(result.value) // the csv text\n    const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\n    const rows_ = results.data // array of objects\n    const rows = rows_.slice(0, -1)\n\n    console.log(results)\n    console.log(rows)\n\n    setRows(rows)\n  }\n\n  useEffect(() => {\n    \n    getType()\n\n  }, [])\n\n  let emptyCell = []\n\n  for (let row of rows) {\n    if (row.FullName === '' | row.Phone === '' | row.Email === '') {\n      emptyCell.push('')\n    }\n  }\n  // recieve emails\n  let emails = []\n  for (let row of rows) {\n    emails.push(row.Email.toLowerCase())\n  }\n\n  // recieve phones\n  let phones = []\n  for (let row of rows) {\n    if (row.Phone.length === 10) {\n      phones.push('+1' + row.Phone)\n    } else if (row.Phone.length === 11) {\n      phones.push('+' + row.Phone)\n    } else {\n      phones.push(row.Phone)\n    }\n  }\n\n  // find duplicate phone\n  let duplicatePhone = []\n\n  for (let i = 0; i < phones.length; i++) {\n    let a = []\n    for (let j = 0; j < phones.length; j++) {\n      if (phones[i].trim() === phones[j].trim() && i !== j) {\n        a.push(j)\n      }\n    }\n    if (a[0] === undefined) {\n      duplicatePhone.push(null)\n    } else {\n      duplicatePhone.push(a[0])\n      a.length = 0\n    }\n  }\n\n  // find duplicate email\n  let duplicateEmail = []\n\n  for (let i = 0; i < emails.length; i++) {\n    let a = []\n    for (let j = 0; j < emails.length; j++) {\n      if (emails[i].trim() === emails[j].trim() && i !== j) {\n        a.push(j)\n      }\n    }\n    if (a[0] === undefined) {\n      duplicateEmail.push(null)\n    } else {\n      duplicateEmail.push(a[0])\n      a.length = 0\n    }\n  }\n\n\n  return (\n    <div >\n\n      {type !== 'csv' && type !== null\n        ?\n        <div>\n          <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} disabled>Import file</button>\n          <ErrorType />\n        </div>\n        : emptyCell.length > 0\n          ?\n          <div>\n            <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} disabled>Import file</button>\n            <ErrorRequiredFields />\n          </div>\n          :\n\n          <div>\n            <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} onClick={getRows} >Import file</button>\n\n            <Table duplicateEmail={duplicateEmail} duplicatePhone={duplicatePhone} rows={rows} />\n          </div>\n\n      }\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}