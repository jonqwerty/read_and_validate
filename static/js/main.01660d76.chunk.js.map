{"version":3,"sources":["table/Table.jsx","table/ErrorRequiredFields.jsx","table/ErrorType.jsx","data/lawyerList.csv","App.jsx","reportWebVitals.js","index.js"],"names":["theadStyle","border","backgroundColor","padding","tbodyStyle","errorStyle","Table","props","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","console","log","today2","dd2","mm2","yyyy2","style","borderCollapse","margin","marginTop","rows","map","item","index","FullName","trim","Phone","length","Email","Number","isInteger","Age","Experience","YearlyIncome","toFixed","Haschildren","toLowerCase","Licensestates","Expirationdate","match","Licensenumber","duplicatePhone","duplicateEmail","ErrorRequiredFields","width","height","textAlign","ErrorType","App","useState","setRows","type","setType","a","fetch","file","response","url","split","pop","reader","body","getReader","read","result","decoder","TextDecoder","csv","decode","value","results","Papa","parse","header","rows_","data","slice","useEffect","getType","emptyCell","row","push","emails","phones","i","j","undefined","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01660d76.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst theadStyle = {\r\n  border: '1px solid black',\r\n  backgroundColor: 'aqua',\r\n  padding: '5px'\r\n}\r\n\r\nconst tbodyStyle = {\r\n  border: '1px solid black',\r\n}\r\n\r\nconst errorStyle = {\r\n  border: '1px solid black',\r\n  backgroundColor: 'pink',\r\n}\r\n\r\n\r\n\r\nconst Table = (props) => {\r\n\r\n  // get curent date in format yyyy-mm-dd\r\n  let today = new Date()\r\n  let dd = String(today.getDate()).padStart(2, '0')\r\n  let mm = String(today.getMonth() + 1).padStart(2, '0')\r\n  let yyyy = today.getFullYear()\r\n\r\n  today = yyyy + '-' + mm + '-' + dd\r\n  console.log(today)\r\n\r\n  // get curent date in format mm/dd/yyyy\r\n  let today2 = new Date()\r\n  let dd2 = String(today2.getDate()).padStart(2, '0')\r\n  let mm2 = String(today2.getMonth() + 1).padStart(2, '0')\r\n  let yyyy2 = today2.getFullYear()\r\n\r\n  today2 = mm2 + '/' + dd2 + '/' + yyyy2\r\n  console.log(today2)\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <table style={{ border: '1px solid black', borderCollapse: 'collapse', margin: 'auto', marginTop: '50px' }} >\r\n        <thead>\r\n          <tr >\r\n            <th style={theadStyle}>ID</th>\r\n            <th style={theadStyle}>Full Name</th>\r\n            <th style={theadStyle}>Phone</th>\r\n            <th style={theadStyle}>Email</th>\r\n            <th style={theadStyle}>Age</th>\r\n            <th style={theadStyle}> Experience</th>\r\n            <th style={theadStyle}> Yearly Income</th>\r\n            <th style={theadStyle}>Has children</th>\r\n            <th style={theadStyle}>License state</th>\r\n            <th style={theadStyle}>Expiration date</th>\r\n            <th style={theadStyle}>License number</th>\r\n            <th style={theadStyle}>Duplicate with</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n\r\n          {props.rows.map((item, index) => (\r\n            <tr key={index}>\r\n              <td style={tbodyStyle}>{index + 1}</td>\r\n              <td style={tbodyStyle}>{item.FullName.trim()}</td>\r\n\r\n              { item.Phone.length === 10\r\n                ? <td style={tbodyStyle}>{'+1' + item.Phone.trim()}</td>\r\n                : item.Phone.length === 11\r\n                  ? <td style={tbodyStyle}>{'+' + item.Phone.trim()}</td>\r\n                  : <td style={tbodyStyle}>{item.Phone.trim()}</td>}\r\n\r\n              <td style={tbodyStyle}>{item.Email.trim()}</td>\r\n\r\n              { Number.isInteger(+item.Age) && +item.Age > 0 && +item.Age >= 21\r\n                ? <td style={tbodyStyle}>{item.Age.trim()}</td>\r\n                : <td style={errorStyle}>{item.Age.trim()}</td>}\r\n\r\n              {+item.Experience >= 0 && +item.Experience < +item.Age\r\n                ? <td style={tbodyStyle}>{item.Experience.trim()}</td>\r\n                : <td style={errorStyle}>{item.Experience.trim()}</td>}\r\n\r\n              {+item.YearlyIncome < 1000000\r\n                ? <td style={tbodyStyle}>{(+item.YearlyIncome.trim()).toFixed(2)}</td>\r\n                : <td style={errorStyle}>{(+(item.YearlyIncome.trim())).toFixed(2)}</td>}\r\n\r\n              {item.Haschildren.toLowerCase() === 'true' || item.Haschildren.toLowerCase() === 'false' || item.Haschildren.toLowerCase() === ''\r\n                ? <td style={tbodyStyle}>{item.Haschildren.trim()}</td>\r\n                : <td style={errorStyle}>{item.Haschildren.trim()}</td>}\r\n\r\n              <td style={tbodyStyle}>{item.Licensestates.trim()}</td>\r\n\r\n              {item.Expirationdate.match(/\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])/) && new Date(item.Expirationdate) < new Date(today)\r\n                ? <td style={tbodyStyle}>{item.Expirationdate.trim()}</td>\r\n                : item.Expirationdate.match(/(0[1-9]|1[0-9]|2[0-9]|3[0,1])([/+-])(0[1-9]|1[0-2])([/+-])(19|20)[0-9]{2}/) && new Date(item.Expirationdate) < new Date(today2)\r\n                  ? <td style={tbodyStyle}>{item.Expirationdate.trim()}</td>\r\n                  : <td style={errorStyle}>{item.Expirationdate.trim()}</td>}\r\n\r\n              {item.Licensenumber.length === 6 && item.Licensenumber.match(\"^[a-zA-Z0-9]+$\")\r\n                ? <td style={tbodyStyle}>{item.Licensenumber.trim()}</td>\r\n                : <td style={errorStyle}>{item.Licensenumber.trim()}</td>}\r\n\r\n              {props.duplicatePhone[index] === null && props.duplicateEmail[index] === null\r\n                ? <td style={tbodyStyle}></td>\r\n                : props.duplicatePhone[index] === null && props.duplicateEmail[index] !== null\r\n                  ? <td style={tbodyStyle}>{props.duplicateEmail[index] + 1}</td>\r\n                  : props.duplicatePhone[index] !== null && props.duplicateEmail[index] === null\r\n                    ? <td style={tbodyStyle}>{props.duplicatePhone[index] + 1}</td>\r\n                    : props.duplicatePhone[index] < props.duplicateEmail[index]\r\n                      ? <td style={tbodyStyle}>{props.duplicatePhone[index] + 1}</td>\r\n                      : <td style={tbodyStyle}>{props.duplicateEmail[index] + 1}</td>}\r\n\r\n\r\n            </tr>\r\n          ))}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import React from 'react'\r\n\r\n\r\nconst ErrorRequiredFields = () => {\r\n\r\n    return (\r\n\r\n        <div style={{border: '1px solid pinc', backgroundColor: 'pink', width: '400px', height: '60px', textAlign: 'center', margin: 'auto' }}>\r\n            Full Name, Phone, Email is required for filling\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorRequiredFields","import React from 'react'\r\n\r\n\r\nconst ErrorType = () => {\r\n\r\n    return (\r\n\r\n        <div style={{border: '1px solid pinc', backgroundColor: 'pink', width: '400px', height: '60px', textAlign: 'center', margin: 'auto' }}>\r\n            File format is not corrected\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorType","export default __webpack_public_path__ + \"static/media/lawyerList.fdcc8bae.csv\";","import React, { useEffect, useState } from 'react'\nimport Papa from 'papaparse'\nimport Table from './table/Table'\nimport ErrorRequiredFields from './table/ErrorRequiredFields'\nimport ErrorType from './table/ErrorType'\nimport file from './data/lawyerList.csv'\n\n\nconst App = () => {\n\n  const [rows, setRows] = useState([])\n  const [type, setType] = useState(null)\n\n\n  async function getType() {\n    const response = await fetch(file)\n    \n    console.log(response)\n    const type = response.url.split('.').pop()\n\n    setType(type)\n  }\n\n  async function getRows() {\n    \n    const response = await fetch(file)\n    const reader = response.body.getReader()\n    const result = await reader.read() // raw array\n    const decoder = new TextDecoder('utf-8')\n    const csv = decoder.decode(result.value) // the csv text\n    const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\n    const rows_ = results.data // array of objects\n    const rows = rows_.slice(0, -1)\n\n    console.log(results)\n    console.log(rows)\n\n    setRows(rows)\n  }\n\n  useEffect(() => {\n    \n    getType()\n\n  }, [])\n\n  let emptyCell = []\n\n  for (let row of rows) {\n    if (row.FullName === '' | row.Phone === '' | row.Email === '') {\n      emptyCell.push('')\n    }\n  }\n  // recieve emails\n  let emails = []\n  for (let row of rows) {\n    emails.push(row.Email.toLowerCase())\n  }\n\n  // recieve phones\n  let phones = []\n  for (let row of rows) {\n    if (row.Phone.length === 10) {\n      phones.push('+1' + row.Phone)\n    } else if (row.Phone.length === 11) {\n      phones.push('+' + row.Phone)\n    } else {\n      phones.push(row.Phone)\n    }\n  }\n\n  // find duplicate phone\n  let duplicatePhone = []\n\n  for (let i = 0; i < phones.length; i++) {\n    let a = []\n    for (let j = 0; j < phones.length; j++) {\n      if (phones[i].trim() === phones[j].trim() && i !== j) {\n        a.push(j)\n      }\n    }\n    if (a[0] === undefined) {\n      duplicatePhone.push(null)\n    } else {\n      duplicatePhone.push(a[0])\n      a.length = 0\n    }\n  }\n\n  // find duplicate email\n  let duplicateEmail = []\n\n  for (let i = 0; i < emails.length; i++) {\n    let a = []\n    for (let j = 0; j < emails.length; j++) {\n      if (emails[i].trim() === emails[j].trim() && i !== j) {\n        a.push(j)\n      }\n    }\n    if (a[0] === undefined) {\n      duplicateEmail.push(null)\n    } else {\n      duplicateEmail.push(a[0])\n      a.length = 0\n    }\n  }\n\n\n  return (\n    <div >\n\n      {type !== 'csv' && type !== null\n        ?\n        <div>\n          <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} disabled>Import file</button>\n          <ErrorType />\n        </div>\n        : emptyCell.length > 0\n          ?\n          <div>\n            <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} disabled>Import file</button>\n            <ErrorRequiredFields />\n          </div>\n          :\n\n          <div>\n            <button style={{ backgroundColor: 'lime', margin: '20px', padding: '15px' }} onClick={getRows} >Import file</button>\n\n            <Table duplicateEmail={duplicateEmail} duplicatePhone={duplicatePhone} rows={rows} />\n          </div>\n\n      }\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}